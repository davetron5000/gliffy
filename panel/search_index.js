var search_data = {"index":{"searchIndex":["gliffy","accesstoken","badauthorizationexception","badresponseexception","credentials","handle","noresponseexception","request","requestfailedexception","response","signedurl","httpartyauth","object","[]=()","account_admins()","account_documents()","account_folders()","account_get()","account_users()","anything()","clear_access_token()","delete_token()","determine_protocol()","document_create()","document_delete()","document_edit_link()","document_get()","document_get_metadata()","document_get_public_url()","document_get_url()","document_move()","document_update()","encode()","encodeparts()","folder_add_user()","folder_create()","folder_delete()","folder_documents()","folder_remove_user()","folder_users()","from_http_response()","full_url()","has_access_token?()","method_missing()","method_missing()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","nonce()","output_folder()","params=()","post()","replace_url()","update_access_token()","update_token()","user_create()","user_delete()","user_documents()","user_folders()","user_update()","verify()","write_config()","readme.rdoc","gliffy","gliffy.rb","credentials.rb","handle.rb","request.rb","response.rb","url.rb","version.rb"],"longSearchIndex":["lib/gliffy.rb","gliffy","gliffy","gliffy","gliffy","gliffy","gliffy","gliffy","gliffy","gliffy","gliffy","bin/gliffy","bin/gliffy","gliffy::signedurl","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::credentials","gliffy::handle","gliffy::request","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::signedurl","gliffy::signedurl","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::response","gliffy::signedurl","gliffy::credentials","gliffy::request","gliffy::response","gliffy::accesstoken","gliffy::badauthorizationexception","gliffy::badresponseexception","gliffy::credentials","gliffy::handle","gliffy::noresponseexception","gliffy::request","gliffy::requestfailedexception","gliffy::response","gliffy::signedurl","gliffy::credentials","object","gliffy::signedurl","httpartyauth","gliffy::request","gliffy::credentials","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::handle","gliffy::response","object","files/readme_rdoc.html","files/bin/gliffy.html","files/lib/gliffy_rb.html","files/lib/gliffy/credentials_rb.html","files/lib/gliffy/handle_rb.html","files/lib/gliffy/request_rb.html","files/lib/gliffy/response_rb.html","files/lib/gliffy/url_rb.html","files/lib/gliffy/version_rb.html"],"info":[["Gliffy","lib/gliffy/credentials.rb","classes/Gliffy.html"," < ","Generated by rake update_version --- This is the Ruby client library for interacting with Gliffy[http://www.gliffy.com].",1],["AccessToken","Gliffy","classes/Gliffy/AccessToken.html"," < Object","Encapsulates a request token, which is what Gliffy returns when you request a user's OAuth Token ",1],["BadAuthorizationException","Gliffy","classes/Gliffy/BadAuthorizationException.html"," < Exception","",1],["BadResponseException","Gliffy","classes/Gliffy/BadResponseException.html"," < Exception","Indicates that a response was received by that it wasn't parsable or readable as a Gliffy <response>",1],["Credentials","Gliffy","classes/Gliffy/Credentials.html"," < Object","Encapsulates all the information needed to make a request of Gliffy outside of request-specific information.",1],["Handle","Gliffy","classes/Gliffy/Handle.html"," < Object","A \"handle\" to access Gliffy on a per-user-session basis Since most calls to gliffy require a user-token,",1],["NoResponseException","Gliffy","classes/Gliffy/NoResponseException.html"," < Exception","Indicates no response at all was received. ",1],["Request","Gliffy","classes/Gliffy/Request.html"," < Object","Handles making a request of the Gliffy server and all that that entails. This allows you to make requests",1],["RequestFailedException","Gliffy","classes/Gliffy/RequestFailedException.html"," < Exception","Indicates that a valid Gliffy <response> was received and that it  indicated failure.  The message is",1],["Response","Gliffy","classes/Gliffy/Response.html"," < Object","Base class for all response from gliffy ",1],["SignedURL","Gliffy","classes/Gliffy/SignedURL.html"," < Object","Handles signing and assembling the URL ",1],["HTTPartyAuth","bin/gliffy","classes/HTTPartyAuth.html"," < Object","",1],["Object","bin/gliffy","classes/Object.html"," < Object","",1],["[]=","Gliffy::SignedURL","classes/Gliffy/SignedURL.html#M000061","(param,value)","Sets a request parameter [param] the name of the parameter, as a string or symbol [value] the value of",2],["account_admins","Gliffy::Handle","classes/Gliffy/Handle.html#M000013","()","Get admins of your account.  Returns users ",2],["account_documents","Gliffy::Handle","classes/Gliffy/Handle.html#M000014","(show=nil)","Returns all documents in the account [+show+] if nil, all documents are returned; if :public only public",2],["account_folders","Gliffy::Handle","classes/Gliffy/Handle.html#M000015","()","Returns all folders in the account ",2],["account_get","Gliffy::Handle","classes/Gliffy/Handle.html#M000016","(show_users=true)","Returns account meta data [+show_users+] if true, include the list of users in this account ",2],["account_users","Gliffy::Handle","classes/Gliffy/Handle.html#M000017","()","Get users in your account ",2],["anything","Gliffy::Handle","classes/Gliffy/Handle.html#M000044","(method,url,params={},parse=false,link=false)","",2],["clear_access_token","Gliffy::Credentials","classes/Gliffy/Credentials.html#M000004","()","Clear the access token if, for some reason, you know the one you have is bad. ",2],["delete_token","Gliffy::Handle","classes/Gliffy/Handle.html#M000012","()","Delete the current token ",2],["determine_protocol","Gliffy::Request","classes/Gliffy/Request.html#M000008","(params)","",2],["document_create","Gliffy::Handle","classes/Gliffy/Handle.html#M000018","(name,folder_path=nil,template_id=nil,type=:diagram)","Create a new document [+name+] Name of the new document [+folder_path+] Path in which to place the document",2],["document_delete","Gliffy::Handle","classes/Gliffy/Handle.html#M000019","(document_id)","Delete an existing document ",2],["document_edit_link","Gliffy::Handle","classes/Gliffy/Handle.html#M000024","(document_id,return_url,return_text='Return')","Get the link to edit a document ",2],["document_get","Gliffy::Handle","classes/Gliffy/Handle.html#M000021","(document_id,type=:jpeg,size=:L,version=nil)","Get a document; returning the actual bytes [+document_id+] identifier of the document [+type+] document",2],["document_get_metadata","Gliffy::Handle","classes/Gliffy/Handle.html#M000020","(document_id,show_revisions=false)","Get meta-data about a document. [+document_id+] identifier of the document [+show_revisions+] if true,",2],["document_get_public_url","Gliffy::Handle","classes/Gliffy/Handle.html#M000022","(document_id,size=:L)","Gets the public link to the document, which is static and not dependent on the key or authorization.",2],["document_get_url","Gliffy::Handle","classes/Gliffy/Handle.html#M000023","(document_id,type=:jpg,size=:L,version=nil)","Get a link to a document [+document_id+] identifier of the document [+type+] document type.  Types known",2],["document_move","Gliffy::Handle","classes/Gliffy/Handle.html#M000025","(document_id,new_path)","Move a document to a different folder ",2],["document_update","Gliffy::Handle","classes/Gliffy/Handle.html#M000029","(document_id,options)","Update a document's meta-data or content [+document_id+] identifier of document to update [+options+]",2],["encode","Gliffy::SignedURL","classes/Gliffy/SignedURL.html#M000059","(string)","Ruby's CGI::encode doesn't encode spaces correctly ",2],["encodeParts","Gliffy::SignedURL","classes/Gliffy/SignedURL.html#M000058","(url)","Encodes each part of this url, accounting for some of the weirdness we are dealing with ",2],["folder_add_user","Gliffy::Handle","classes/Gliffy/Handle.html#M000031","(path,username)","Add a user to a folder ",2],["folder_create","Gliffy::Handle","classes/Gliffy/Handle.html#M000032","(path)","Create a new folder [+path+] the path to the folder, each path separated by a forward slash.  If this",2],["folder_delete","Gliffy::Handle","classes/Gliffy/Handle.html#M000033","(path)","Delete a folder [+path+] the path to the folder.  See folder_create. ",2],["folder_documents","Gliffy::Handle","classes/Gliffy/Handle.html#M000034","(path)","Get the documents in a folder [+path+] the path to the folder whose documents to get ",2],["folder_remove_user","Gliffy::Handle","classes/Gliffy/Handle.html#M000036","(path,username)","Remove a user from access to the folder ",2],["folder_users","Gliffy::Handle","classes/Gliffy/Handle.html#M000035","(path)","Get users with access to the folder [+path+] the path to the folder whose users to get ",2],["from_http_response","Gliffy::Response","classes/Gliffy/Response.html#M000037","(response,error_callback=nil)","Factory for creating actual response subclasses. This takes the results of HTTParty's response, which",2],["full_url","Gliffy::SignedURL","classes/Gliffy/SignedURL.html#M000063","(timestamp=nil,nonce=nil)","Gets the full URL, signed and ready to be requested ",2],["has_access_token?","Gliffy::Credentials","classes/Gliffy/Credentials.html#M000002","()","",2],["method_missing","Gliffy::Request","classes/Gliffy/Request.html#M000007","(symbol,*args)","Implements getting a request and returning a response The implements methods that correspond to Gliffy's",2],["method_missing","Gliffy::Response","classes/Gliffy/Response.html#M000048","(symbol,*args)","Implements access to the object information. Parameters should be typed appropriately. The names are",2],["new","Gliffy::AccessToken","classes/Gliffy/AccessToken.html#M000000","(token,secret)","Create a new token [+token+] the token itself [+secret+] the token secret, used for signing requests",2],["new","Gliffy::BadAuthorizationException","classes/Gliffy/BadAuthorizationException.html#M000030","(message)","",2],["new","Gliffy::BadResponseException","classes/Gliffy/BadResponseException.html#M000027","(message)","",2],["new","Gliffy::Credentials","classes/Gliffy/Credentials.html#M000001","(consumer_key, consumer_secret, description, account_id, username, default_protocol=:http, access_token = nil)","Create a new Credentials object. [+consumer_key+] The OAuth consumer key given to you when you signed",2],["new","Gliffy::Handle","classes/Gliffy/Handle.html#M000009","(api_root,edit_api_root,credentials,http=nil,logger=nil)","Create a new handle to Gliffy [+api_root+] root URL (without the protocol) of where to connect to Gliffy",2],["new","Gliffy::NoResponseException","classes/Gliffy/NoResponseException.html#M000026","(message)","",2],["new","Gliffy::Request","classes/Gliffy/Request.html#M000006","(api_root,credentials,http=HTTParty,logger=nil)","Create a new request object. [+api_root+] the root of where all API calls are made [+credentials+] a",2],["new","Gliffy::RequestFailedException","classes/Gliffy/RequestFailedException.html#M000028","(message)","",2],["new","Gliffy::Response","classes/Gliffy/Response.html#M000047","(params)","",2],["new","Gliffy::SignedURL","classes/Gliffy/SignedURL.html#M000060","(credentials,url,method,logger=nil)","Create a new SignedURL [+credentails+] The credentials available when signing the request (required).",2],["nonce","Gliffy::Credentials","classes/Gliffy/Credentials.html#M000005","()","Return a nonce that hasn't been used before (at least not in this space/time continuum) ",2],["output_folder","Object","classes/Object.html#M000068","(f)","",2],["params=","Gliffy::SignedURL","classes/Gliffy/SignedURL.html#M000062","(params_hash)","Sets all request parameters to those in the hash. ",2],["post","HTTPartyAuth","classes/HTTPartyAuth.html#M000069","(url)","",2],["replace_url","Gliffy::Request","classes/Gliffy/Request.html#M000010","(url)","",2],["update_access_token","Gliffy::Credentials","classes/Gliffy/Credentials.html#M000003","(token)","Update the access token ",2],["update_token","Gliffy::Handle","classes/Gliffy/Handle.html#M000011","(force=false)","Updates the token being used if there isn't one in the  credentials, or by forcing [+force+] always attempt",2],["user_create","Gliffy::Handle","classes/Gliffy/Handle.html#M000038","(username)","Create a new user [+username+] the name to give this user ",2],["user_delete","Gliffy::Handle","classes/Gliffy/Handle.html#M000039","(username)","Delete an existing user ",2],["user_documents","Gliffy::Handle","classes/Gliffy/Handle.html#M000040","(username='$username')","Get the documents a user has access to (this is potentially expensive, as it results in multiple calls",2],["user_folders","Gliffy::Handle","classes/Gliffy/Handle.html#M000042","(username='$username')","Get the folders a user has access to [username] if provided, get folders for the given username, otherwise",2],["user_update","Gliffy::Handle","classes/Gliffy/Handle.html#M000043","(username,options)","Update a user's meta-data [+username+] the username to operate on [+options+] the options for updating",2],["verify","Gliffy::Response","classes/Gliffy/Response.html#M000041","(response,error_callback)","Verifies that the response represents success, calling the error callback if it doesn't ",2],["write_config","Object","classes/Object.html#M000070","(cred,config)","",2],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","This is the Ruby client library for interacting with Gliffy[http://www.gliffy.com].  It's main function",3],["gliffy","files/bin/gliffy.html","files/bin/gliffy.html","","",3],["gliffy.rb","files/lib/gliffy_rb.html","files/lib/gliffy_rb.html","","",3],["credentials.rb","files/lib/gliffy/credentials_rb.html","files/lib/gliffy/credentials_rb.html","","",3],["handle.rb","files/lib/gliffy/handle_rb.html","files/lib/gliffy/handle_rb.html","","",3],["request.rb","files/lib/gliffy/request_rb.html","files/lib/gliffy/request_rb.html","","",3],["response.rb","files/lib/gliffy/response_rb.html","files/lib/gliffy/response_rb.html","","",3],["url.rb","files/lib/gliffy/url_rb.html","files/lib/gliffy/url_rb.html","","",3],["version.rb","files/lib/gliffy/version_rb.html","files/lib/gliffy/version_rb.html","","Generated by rake update_version --- This is the Ruby client library for interacting with Gliffy[http://www.gliffy.com].",3]]}}